CREATE ALGORITHM=UNDEFINED DEFINER=`homestead`@`%` SQL SECURITY DEFINER VIEW `pt_testers_calculated_v` AS select `pt_testers_result`.`pt_sample_id` AS `pt_sample_id`,`pt_testers_result`.`equipment_id` AS `equipment_id`,`pt_testers_result`.`pt_round_id` AS `pt_round_id`,round(avg(`pt_testers_result`.`result`),0) AS `mean`,round(std(`pt_testers_result`.`result`),2) AS `sd`,(2 * round(std(`pt_testers_result`.`result`),2)) AS `doublesd`,(round(avg(`pt_testers_result`.`result`),0) + (2 * round(std(`pt_testers_result`.`result`),2))) AS `upper_limit`,(round(avg(`pt_testers_result`.`result`),2) - (2 * round(std(`pt_testers_result`.`result`),2))) AS `lower_limit`,ceiling(((std(`pt_testers_result`.`result`) / avg(`pt_testers_result`.`result`)) * 100)) AS `cv`,(case when (ceiling(((std(`pt_testers_result`.`result`) / avg(`pt_testers_result`.`result`)) * 100)) > 28) then 'Failed' else 'Passed' end) AS `outcome` from `pt_testers_result` group by `pt_testers_result`.`pt_sample_id`,`pt_testers_result`.`equipment_id`